@using Blazix.Collapsible
@using Blazix.FocusGroup
@using System.Diagnostics.CodeAnalysis

<FocusGroupItem @ref="focusGroupItem">
    <CollapsibleTrigger aria-disabled="@IsAriaDisabled"
                        id="@ItemContext?.TriggerId"
                        data-orientation="@AccordionContext?.GroupOrientation.ToDataAttributeString()"
                        @attributes="AdditionalAttributes"
                        @onkeydown="HandleKeyDown"
                        @ref="collapsibleTrigger">
        @ChildContent
    </CollapsibleTrigger>
</FocusGroupItem>

@code {
    private ElementReference? element;
    private FocusGroupItem? focusGroupItem;
    private CollapsibleTrigger? collapsibleTrigger;

    private bool IsAriaDisabled => ItemContext?.IsOpen == true && AccordionContext?.IsCollapsible == false;

    [CascadingParameter]
    private IAccordionContext? AccordionContext { get; set; }

    [CascadingParameter]
    private AccordionItemContext? ItemContext { get; set; }

    /// <summary>
    /// Defines the child components of this instance.
    /// </summary>
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    /// <summary>
    /// Gets or sets a collection of additional attributes that will be applied to the created element.
    /// </summary>
    [Parameter(CaptureUnmatchedValues = true)]
    public IReadOnlyDictionary<string, object>? AdditionalAttributes { get; set; }

    /// <summary>
    /// Gets or sets the associated <see cref="ElementReference"/>.
    /// <para>
    /// May be <see langword="null"/> if accessed before the component is rendered.
    /// </para>
    /// </summary>
    [DisallowNull]
    public ElementReference? Element
    {
        get => element ?? collapsibleTrigger?.Element;
        protected set => element = value;
    }

    /// <inheritdoc />
    protected override void OnParametersSet()
    {
        if (ItemContext is null || AccordionContext is null)
        {
            throw new InvalidOperationException($"'{nameof(AccordionTrigger)}' must be used within an '{nameof(__Blazor.Blazix.Accordion.AccordionItem)}'.");
        }
    }

    /// <inheritdoc />
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            focusGroupItem?.SetElement(collapsibleTrigger?.Element);
        }
    }

    private Task HandleKeyDown(KeyboardEventArgs e) => focusGroupItem?.OnKeyDown(e) ?? Task.CompletedTask;
}